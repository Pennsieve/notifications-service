pennsieve {
  jwt {
    key = "testkey"
    key = ${?JWT_SECRET_KEY}
  }
}

postgres {
  database = "pennsieve_postgres"
  database = ${?PENNSIEVE_POSTGRES_DATABASE}
  host = "postgres"
  host = ${?PENNSIEVE_POSTGRES_HOST}
  password = "password"
  password = ${?PENNSIEVE_POSTGRES_PASSWORD}
  port = 5432
  port = ${?PENNSIEVE_POSTGRES_PORT}
  user = "postgres"
  user = ${?PENNSIEVE_POSTGRES_USER}

  notificationChannel = "notification_service"
}

host = ${?HOST}

environment = "local"
environment = ${?ENVIRONMENT}

notifications {
  pingInterval = 10
  pingInterval = ${?PING_INTERVAL}
  freshnessThreshold = 30
  freshnessThreshold = ${?FRESHNESS_THRESHOLD}
  aggregationInterval = 15
  aggregationInterval = ${?AGGREGATION_INTERVAL}
  aggregationCount = 10
  aggregationCount = ${?AGGREGATION_COUNT}
  rateLimit {
    elements = 10
    elements = ${?RATE_LIMIT_ELEMENTS}
    seconds = 1
    seconds = ${?RATE_LIMIT_PER_SECOND}
  }
  retry {
    minBackoff = 1s
    maxBackoff = 5s
    randomFactor = 0.2
    maxRestarts = 3
  }
}

parallelism = 1

sqs {
  host = "http://localhost:4576"
  host = ${?SQS_HOST}
  region = "us-east-1"
  region = ${?SQS_REGION}
  notifications_queue = "queue/local-notifications-queue"
  notifications_queue = ${?NOTIFICATIONS_SQS_QUEUE}
}

cognito {
  user_pool {
    id = "us-east-1_jOTRYd628"
    id = ${?COGNITO_USER_POOL_ID}

    app_client_id = ""
    app_client_id = ${?COGNITO_USER_POOL_APP_CLIENT_ID}
  }

  token_pool {
    id = "us-east-1_24NMNZenM"
    id = ${?COGNITO_TOKEN_POOL_ID}

    app_client_id = ""
    app_client_id = ${?COGNITO_TOKEN_POOL_APP_CLIENT_ID}
  }

  region = "us-east-1"
}